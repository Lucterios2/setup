<project name="Lucterios2" default="all" basedir=".">
	<property name="project.name" value="lucterios" />
	<property environment="env" />
	<property name="p12certificatpath" value="/opt/sign/authenticode.spc" />
	
	<available file="/usr/bin/wine" property="wine.present" />
	<available file="/usr/bin/hdiutil" property="mac.present" />
	<available file="/usr/bin/genisoimage" property="pseudomac.present" />
	<condition property="sign.present">
		<and>
		    <available file="/usr/bin/signcode"/>
		    <available file="${p12certificatpath}"/>
		</and>
	</condition>

	<condition property="lct_name" value="${env.LCT_NAME}">
		<isset property="env.LCT_NAME" />
	</condition>
	<condition property="lct_name" value="Lucterios">
		<not>
		    <isset property="env.LCT_NAME" />
		</not>
	</condition>
	<condition property="lct_package" value="${env.LCT_PACKAGES}">
		<isset property="env.LCT_PACKAGES" />
	</condition>
	<condition property="lct_package" value="lucterios-standard">
		<not>
		    <isset property="env.LCT_PACKAGES" />
		</not>
	</condition>
	<condition property="lct_url" value="${env.LCT_URL}">
		<isset property="env.LCT_URL" />
	</condition>
	<condition property="lct_url" value="">
		<not>
		    <isset property="env.LCT_URL" />
		</not>
	</condition>

	<target name="init">
		<exec executable="/bin/bash" outputproperty="build.tstmp" failifexecutionfails="false" errorproperty="">
			<arg line="-c 'git log -1 --format=%at'" />
		</exec>
		<exec executable="python" outputproperty="build.num" failifexecutionfails="false" errorproperty="">
			<arg value="-c" />
			<arg value="import datetime;print(datetime.datetime.fromtimestamp(int('${build.tstmp}')).strftime('%y%m%d%H'))" />
		</exec>
		<echo>num=${build.num}</echo>
		<echo>name=${lct_name}</echo>
		<echo>package=${lct_package}</echo>
		<echo>url=${lct_url}</echo>
	</target>

	<target name="correct_install">
		<replace file="${file_path}" token="@@NAME@@" value="${lct_name}"/>
		<replace file="${file_path}" token="@@PACKAGE@@" value="${lct_package}"/>
		<replace file="${file_path}" token="@@URL@@" value="${lct_url}"/>
		<replace file="${file_path}" token="@@BUILD@@" value="${build.num}"/>
	</target>

	<target name="tar">
		<delete dir="${basedir}/${lct_name}" />
		<copy file="${basedir}/install.sh" todir="${basedir}/${lct_name}" />
		<copy file="${basedir}/uninstall.sh" todir="${basedir}/${lct_name}" />
		<copy file="${basedir}/License.txt" todir="${basedir}/${lct_name}" />
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/${lct_name}/install.sh" />
		</antcall>
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/${lct_name}/uninstall.sh" />
		</antcall>
		<chmod file="${basedir}/${lct_name}/install.sh" perm="ugo+rx"/>
		<chmod file="${basedir}/${lct_name}/uninstall.sh" perm="ugo+rx"/>
		<exec executable="tar" dir="${basedir}">
			<arg line="-czf ./bin/${lct_name}_setup.tar.gz ${lct_name}" />
		</exec>
		<delete dir="${basedir}/${lct_name}" />
	</target>
	
	<target name="winsign" if="sign.present">
		<copy file="bin/${lct_name}_setup.exe" tofile="bin/${lct_name}_setup-signed.exe" />
		<exec executable="signcode" dir="${basedir}">
			<arg line="-spc ${p12certificatpath} -a sha1 -$ commercial -n Lucterios -i 'http://www.Lucterios.org' -t http://timestamp.verisign.com/scripts/timstamp.dll -tr 10 bin/${lct_name}_setup-signed.exe"/>
		</exec>
		<delete file="${basedir}/bin/${lct_name}_setup-signed.exe.bak" />
	</target>

	<target name="nsis" if="wine.present">
		<delete dir="${basedir}/tmp" />
		<mkdir dir="${basedir}/tmp" />
		<copy file="${basedir}/License.txt" todir="${basedir}/tmp" />
		<copy file="${basedir}/setup.nsi" tofile="${basedir}/tmp/setup.nsi" />
		<copy file="${basedir}/install.ps1" tofile="${basedir}/tmp/install.ps1" />
		<unzip src="${basedir}/PythonWin32.zip" dest="${basedir}/tmp/"/>
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/tmp/setup.nsi" />
		</antcall>
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/tmp/install.ps1" />
		</antcall>
		<echo message='user.dir=${user.dir} - basedir=${basedir}' />
		<exec executable="/usr/bin/wine" dir="${basedir}/bin">
			<env key="WINEPREFIX" value="/home/ubuntu/.wine" />
			<env key="DISPLAY" value=":0.0" />
			<arg value="C:/NSIS/makensis.exe" />
			<arg value="z:${basedir}/tmp/setup.nsi" />
		</exec>
		<move file="${basedir}/tmp/${lct_name}_setup.exe" todir="${basedir}/bin/" />
		<antcall target="winsign" />
		<delete dir="${basedir}/tmp" />
	</target>

	<target name="inno" if="wine.present">
		<delete dir="${basedir}/tmp" />
		<mkdir dir="${basedir}/tmp" />
		<copy file="${basedir}/License.txt" todir="${basedir}/tmp" />
		<copy file="${basedir}/setup.iss" tofile="${basedir}/tmp/setup.iss" />
		<copy file="${basedir}/install.ps1" tofile="${basedir}/tmp/install.ps1" />
		<unzip src="${basedir}/PythonWin32.zip" dest="${basedir}/tmp/"/>
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/tmp/setup.iss" />
		</antcall>
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/tmp/install.ps1" />
		</antcall>
		<echo message='user.dir=${user.dir} - basedir=${basedir}' />
		<exec executable="/usr/bin/wine" dir="${basedir}/bin">
			<env key="WINEPREFIX" value="/home/ubuntu/.wine" />
			<env key="DISPLAY" value=":0.0" />
			<arg value="C:/InnoSetup5/ISCC.exe" />
			<arg value="z:${basedir}/tmp/setup.iss" />
		</exec>
		<move file="${basedir}/tmp/${lct_name}_setup.exe" todir="${basedir}/bin/" />
		<antcall target="winsign" />
		<delete dir="${basedir}/tmp" />
	</target>

	<target name="create_app_mac">
		<mkdir dir="${dir_path}/${name_app}.app/Contents/MacOS" />
		<mkdir dir="${dir_path}/${name_app}.app/Contents/Resources" />
		<copy file="${basedir}/package.icns" todir="${dir_path}/${name_app}.app/Contents/Resources" />
		<move file="${dir_path}/${script}" todir="${dir_path}/${name_app}.app/Contents/MacOS/" />
		<chmod file="${dir_path}/${name_app}.app/Contents/MacOS/${script}" perm="ugo+rx"/>
		<echo file="${dir_path}/${name_app}.app/Contents/MacOS/${name_app}">#!/bin/bash
CURPATH=$(dirname "$0")
cd "$CURPATH"
open ./${script}
		</echo>
		<chmod file="${dir_path}/${name_app}.app/Contents/MacOS/${name_app}" perm="ugo+rx"/>
		<echo file="${dir_path}/${name_app}.app/Contents/Info.plist">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;
&lt;plist version="1.0"&gt;
&lt;dict&gt;
	&lt;key&gt;CFBundleExecutable&lt;/key&gt;
	&lt;string&gt;${name_app}&lt;/string&gt;
	&lt;key&gt;CFBundleGetInfoString&lt;/key&gt;
	&lt;string&gt;${name_app}&lt;/string&gt;
	&lt;key&gt;CFBundleIconFile&lt;/key&gt;
	&lt;string&gt;package.icns&lt;/string&gt;
	&lt;key&gt;CFBundleName&lt;/key&gt;
	&lt;string&gt;${name_app}&lt;/string&gt;
	&lt;key&gt;CFBundlePackageType&lt;/key&gt;
	&lt;string&gt;APPL&lt;/string&gt;
	&lt;key&gt;CFBundleShortVersionString&lt;/key&gt;
	&lt;string&gt;${build.num}&lt;/string&gt;
&lt;/dict&gt;
&lt;/plist&gt;</echo>
	</target>

	<target name="commun_mac">
		<delete dir="${basedir}/tmp" />
		<mkdir dir="${basedir}/tmp" />
		<delete file="${basedir}/${lct_name}_setup.dmg" />
		<copy file="${basedir}/install_mac.sh" tofile="${basedir}/tmp/install_${lct_name}.command" />
		<copy file="${basedir}/uninstall_mac.sh" tofile="${basedir}/tmp/uninstall_${lct_name}.command" />
		<echo file="${basedir}/tmp/install_brew.command">#!/bin/sh
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
		</echo>
		<echo file="${basedir}/tmp/README" encoding="UTF-8">#### Install of ${lct_name} for Mac OS X ####
To install ${lct_name}, you must to have Mac OS X 10.9 minimum (last version is better)
Available on this image:
 - installbrew: allow to install "brew" tool, need to install ${lct_name}
 - install ${lct_name}: allow to install ${lct_name} and dependancy
 - uninstall ${lct_name}: allow to uninstall ${lct_name}

#### Installation de ${lct_name} pour Mac OS X ####
Pour installer ${lct_name}, vous devez disposer de Mac OS X 10.9 minimum (prévilègier la dernière version disponible)
Disponible sur cette image:
 - install brew: permet d'installer l'outil "brew" nécessaire à l'installation de ${lct_name}
 - install ${lct_name}: permet d'installer ${lct_name} ainsi que ces dépendance
 - uninstall ${lct_name}: permet de désinstaller ${lct_name}
		</echo>
		<copy file="${basedir}/License.txt" todir="${basedir}/tmp" />
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/tmp/install_${lct_name}.command" />
		</antcall>
		<antcall target="correct_install">
			<param name="file_path" value="${basedir}/tmp/uninstall_${lct_name}.command" />
		</antcall>
		<chmod file="${basedir}/tmp/install_brew.command" perm="ugo+rx"/>
		<chmod file="${basedir}/tmp/install_${lct_name}.command" perm="ugo+rx"/>
		<chmod file="${basedir}/tmp/uninstall_${lct_name}.command" perm="ugo+rx"/>
		<antcall target="create_app_mac">
			<param name="name_app" value="install ${lct_name}" />
			<param name="dir_path" value="${basedir}/tmp" />
			<param name="script" value="install_${lct_name}.command" />
		</antcall>
		<antcall target="create_app_mac">
			<param name="name_app" value="uninstall ${lct_name}" />
			<param name="dir_path" value="${basedir}/tmp" />
			<param name="script" value="uninstall_${lct_name}.command" />
		</antcall>
		<antcall target="create_app_mac">
			<param name="name_app" value="install brew" />
			<param name="dir_path" value="${basedir}/tmp" />
			<param name="script" value="install_brew.command" />
		</antcall>
	</target>

	<target name="mac" if="mac.present" depends='commun_mac'>
		<exec executable="/usr/bin/hdiutil" dir="${basedir}">
			<arg line="create -ov -srcfolder tmp -volname ${lct_name} ${lct_name}_setup.dmg" />
		</exec>
		<exec executable="/usr/bin/hdiutil" dir="${basedir}">
			<arg line="internet-enable -yes ${lct_name}_setup.dmg" />
		</exec>
		<move file="${basedir}/${lct_name}_setup.dmg" todir="${basedir}/bin" />
		<delete dir="${basedir}/tmp" />
	</target>

	<target name="pseudomac" if="pseudomac.present" depends='commun_mac'>
		<exec executable="/usr/bin/genisoimage" dir="${basedir}">
			<arg line="-V ${lct_name} -D -R -apple -no-pad -o ${lct_name}_setup.dmg tmp" />
		</exec>
		<move file="${basedir}/${lct_name}_setup.dmg" todir="${basedir}/bin" />
		<delete dir="${basedir}/tmp" />
	</target>

	<target name="all" depends="init">
		<delete dir="${basedir}/bin" />
		<mkdir dir="${basedir}/bin" />
		<antcall target="tar" />
		<!-- antcall target="inno" /-->
		<antcall target="nsis" />
		<antcall target="pseudomac" />
		<antcall target="mac" />
		<delete dir="${basedir}/tmp" />
		<echo message="num=${build.num}" file="${basedir}/bin/${lct_name}_${build.num}" append="false" />
		<exec executable="ls" dir="${basedir}/bin">
			<arg line="-lh" />
		</exec>
	</target>

</project>
